{"version":3,"file":"static/js/868.e91f7051.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/App.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin: 24px 0;\n  padding: 20px;\n  display: flex;\n  width: 290px;\n  gap: 20px;\n  flex-direction: column;\n  border: 2px solid;\n  border-color: green;\n`;\n\nexport const Field = styled(FormikField)`\n  margin-top: 10px;\n  width: 100%;\n  padding: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  padding: 4px;\n  border: 1px solid;\n  border-radius: 4px;\n  font-size: 12px;\n\n  &:hover,\n  &:focus {\n    background-color: greenyellow;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const result = contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return result;\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, ErrorMessage } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button } from '@mui/material';\nimport GroupAddOutlinedIcon from '@mui/icons-material/GroupAddOutlined';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  phone: Yup.string()\n    .matches(\n      /^[0-9]{3}-[0-9]{2}-[0-9]{2}$/,\n      'Invalid number format (e.g., xxx-xx-xx)'\n    )\n    .required('Number is required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = newContact => {\n    const isNameRepeat = contacts.some(\n      item => item.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (isNameRepeat) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: newContact.name,\n        number: newContact.phone,\n      })\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        handleAddContact(values);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </label>\n        <label>\n          Number\n          <Field type=\"tel\" name=\"phone\" />\n          <ErrorMessage name=\"phone\" component=\"span\" />\n        </label>\n        {/* <Button type=\"submit\">Add contact</Button> */}\n        <Button\n          startIcon={<GroupAddOutlinedIcon />}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"secondary\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FindSection = styled.div`\n  margin: 14px 0;\n  padding-left: 10px;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const InputField = styled.input`\n  width: 270px;\n  padding: 4px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FindSection, Title, InputField } from './Filter.styled';\nimport { changeFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FindSection>\n      <Title>Find contacts by name</Title>\n      <InputField onChange={e => dispatch(changeFilter(e.target.value))} />\n    </FindSection>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 4px;\n  margin-top: 24px;\n  width: 290px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: 14px;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  border: 1px solid;\n  border-radius: 4px;\n  font-size: 12px;\n\n  &:hover,\n  &:focus {\n    background-color: orange;\n  }\n`;\n","import { Loader } from 'components/Loader';\nimport { List, Item } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const contactsByFilter = useSelector(selectVisibleContacts);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {error && <b>Something went wrong... Try reloading the page </b>}\n      {isLoading && !error && <Loader />}\n      <List>\n        {contactsByFilter.map(({ id, name, number }) => (\n          <Item key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() => handleDelete(id)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.div`\n  margin: 14px auto;\n  width: 290px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Section } from 'components/App.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport LibraryBooksOutlinedIcon from '@mui/icons-material/LibraryBooksOutlined';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <h1>\n        <LibraryBooksOutlinedIcon fontSize=\"large\" color=\"secondary\" />{' '}\n        Phonebook\n      </h1>\n      <ContactForm />\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","ErrorMessage","FormikError","_templateObject3","_templateObject4","selectContacts","state","contacts","items","selectError","error","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","item","name","toLowerCase","includes","ContactSchema","Yup","shape","min","required","phone","matches","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","alert","concat","addContact","number","resetForm","children","_jsxs","type","component","Button","startIcon","GroupAddOutlinedIcon","size","variant","color","FindSection","Title","InputField","Filter","onChange","e","changeFilter","target","value","Loader","ThreeDots","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","List","Item","ContactList","contactsByFilter","_Fragment","map","_ref","id","IconButton","onClick","deleteContact","handleDelete","DeleteIcon","Section","useEffect","fetchContacts","LibraryBooksOutlinedIcon","fontSize"],"sourceRoot":""}