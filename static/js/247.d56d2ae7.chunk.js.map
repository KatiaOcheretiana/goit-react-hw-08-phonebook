{"version":3,"file":"static/js/247.d56d2ae7.chunk.js","mappings":"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","sources":["pages/HomeStyled.js","pages/Home.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import { Box, Container } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const BoxField = styled(Box)(({ theme }) => ({\n  gap: '20px',\n  fontSize: '12px',\n  lineHeight: '26px',\n  letterSpacing: '0.46px',\n  [theme.breakpoints.up('sm')]: {\n    display: 'flex',\n    gap: '40px',\n    fontSize: '24px',\n  },\n}));\n\nexport const HomeContainer = styled(Container)({\n  marginTop: '24px',\n});\n\nexport const Image = styled.img(({ theme }) => ({\n  [theme.breakpoints.up('sm')]: {\n    maxWidth: '200px',\n  },\n  [theme.breakpoints.up('md')]: {\n    maxWidth: '300px',\n  },\n  [theme.breakpoints.up('lg')]: {\n    maxWidth: '500px',\n  },\n}));\n","import { Typography } from '@mui/material';\nimport simpleImage from '../image/people-talking.avif';\nimport { BoxField, HomeContainer, Image } from './HomeStyled';\n\nconst Home = () => {\n  return (\n    <HomeContainer>\n      <Typography variant=\"h3\" sx={{ marginBottom: '20px' }}>\n        Welcome to our contact management platform!\n      </Typography>\n      <BoxField>\n        <Typography variant=\"p\">\n          We're delighted to have you here. This is your space to effortlessly\n          save and organize your contacts. To get started, simply log in and\n          begin streamlining your connections. Let's make managing your contacts\n          a breeze\n        </Typography>\n        <Image src={simpleImage} alt=\"Contacts\" />\n      </BoxField>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["BoxField","styled","Box","_ref","theme","_defineProperty","gap","fontSize","lineHeight","letterSpacing","breakpoints","up","display","HomeContainer","Container","marginTop","Image","_ref3","_ref4","maxWidth","_jsxs","children","_jsx","Typography","variant","sx","marginBottom","src","simpleImage","alt","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","ContainerRoot","_extends","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","React","ref","className","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","as","clsx","createContainer"],"sourceRoot":""}